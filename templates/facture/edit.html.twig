{% extends 'base.html.twig' %}

{% block title %}Modifier la Facture
	{{ facture.numeroFacture }}
{% endblock %}



{% block body %}
	<div class="max-w-5xl mx-auto bg-white shadow rounded-lg p-6 space-y-6">
		<h1 class="text-2xl font-bold text-gray-800">‚úèÔ∏è Modifier la Facture</h1>

		{{ form_start(form) }}

		{# ---------------- Section Info Facture ---------------- #}
		<div class="grid grid-cols-1 md:grid-cols-3 gap-4 p-4 border rounded-lg bg-gray-100 shadow-sm">
			<div>{{ form_row(form.numeroFacture) }}</div>
			<div>{{ form_row(form.dateFacture) }}</div>
			<div>{{ form_row(form.dateEcheance) }}</div>
			<div>{{ form_row(form.fournisseur) }}</div>
			<div>{{ form_row(form.acheteur) }}</div>
			<div>{{ form_row(form.totalHT) }}</div>
			<div>{{ form_row(form.totalTTC) }}</div>
		</div>

		{# ---------------- Section Lignes de facture ---------------- #}
		<div class="p-4 border rounded-lg bg-gray-50 shadow-sm">
			<h2 class="text-xl font-semibold text-gray-700 mb-4">üßæ Lignes de facture</h2>

<div id="facture-lignes" data-prototype="{{ form_widget(form.lignes.vars.prototype)|e('html_attr') }}" class="space-y-4 bg-gray-50 p-4 rounded">
				{# Affiche les lignes de la facture existantes #}

				{% for ligneForm in form.lignes %}
					<div class="ligne-item grid grid-cols-1 md:grid-cols-4 gap-4 p-4 border rounded-md shadow-sm bg-gray-100">
						{# Champs de la ligne de facture #}
						<div>{{ form_row(ligneForm.designation) }}</div>
						<div>{{ form_row(ligneForm.reference) }}</div>
						<div>{{ form_row(ligneForm.quantite) }}</div>
						<div>{{ form_row(ligneForm.unite) }}</div>
						<div>{{ form_row(ligneForm.prixUnitaireHT) }}</div>
						<div>{{ form_row(ligneForm.tauxTVA) }}</div>
						<div>{{ form_row(ligneForm.montantHT) }}</div>
						<div>{{ form_row(ligneForm.montantTVA) }}</div>
						<div>{{ form_row(ligneForm.montantTTC) }}</div>

						<button type="button" class="remove-ligne bg-red-500 text-white px-3 py-1 rounded mt-2 hover:bg-red-600 col-span-1 md:col-span-4">
							‚ùå Supprimer la ligne
						</button>
					</div>
				{% endfor %}
			</div>

			<button type="button" id="add-ligne" class="mt-4 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600">
				‚ûï Ajouter une ligne
			</button>
		</div>

		{# ---------------- Boutons d'action ---------------- #}
		<div class="flex space-x-4">
			<button class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700">üíæ Enregistrer</button>
			<a href="{{ path('facture_index') }}" class="px-4 py-2 bg-gray-300 rounded hover:bg-gray-400">‚Ü©Ô∏è Retour</a>
		</div>

		{{ form_end(form) }}
	</div>

	<script>
		document.addEventListener("DOMContentLoaded", function () {
let collectionHolder = document.getElementById("facture-lignes");
let addButton = document.getElementById("add-ligne");
let totalHTInput = document.getElementById("{{ form.totalHT.vars.id }}");
let totalTTCInput = document.getElementById("{{ form.totalTTC.vars.id }}");

collectionHolder.dataset.index = collectionHolder.querySelectorAll(".ligne-item").length;

function recalcLignes() {
let totalHT = 0;
let totalTTC = 0;

collectionHolder.querySelectorAll(".ligne-item").forEach(function (ligne) {
let qte = parseFloat(ligne.querySelector("[id$='_quantite']").value) || 0;
let prix = parseFloat(ligne.querySelector("[id$='_prixUnitaireHT']").value) || 0;
let tva = parseFloat(ligne.querySelector("[id$='_tauxTVA']").value) || 0;

let ht = qte * prix;
let tvaMontant = ht * tva / 100;
let ttc = ht + tvaMontant;

ligne.querySelector("[id$='_montantHT']").value = ht.toFixed(2);
ligne.querySelector("[id$='_montantTVA']").value = tvaMontant.toFixed(2);
ligne.querySelector("[id$='_montantTTC']").value = ttc.toFixed(2);

totalHT += ht;
totalTTC += ttc;
});

totalHTInput.value = totalHT.toFixed(2);
totalTTCInput.value = totalTTC.toFixed(2);
}

addButton.addEventListener("click", function () {
let prototype = collectionHolder.dataset.prototype;
let index = collectionHolder.dataset.index;
collectionHolder.dataset.index ++;

let newForm = prototype.replace(/__name__/g, index);
let div = document.createElement("div");
div.classList.add("ligne-item", "grid", "grid-cols-1", "md:grid-cols-4", "gap-4", "p-4", "border", "rounded-md", "shadow-sm", "bg-gray-100");
div.innerHTML = newForm;

let removeButton = document.createElement("button");
removeButton.type = "button";
removeButton.classList.add("remove-ligne", "bg-red-500", "text-white", "px-3", "py-1", "rounded", "mt-2", "hover:bg-red-600", "col-span-1", "md:col-span-4");
removeButton.innerText = "‚ùå Supprimer la ligne";
removeButton.addEventListener("click", function () {
div.remove();
recalcLignes();
});

div.appendChild(removeButton);
collectionHolder.appendChild(div);

div.querySelectorAll("input").forEach(function (input) {
input.addEventListener("input", recalcLignes);
});

recalcLignes();
});

document.querySelectorAll(".remove-ligne").forEach(function (btn) {
btn.addEventListener("click", function () {
btn.closest(".ligne-item").remove();
recalcLignes();
});
});

collectionHolder.querySelectorAll("input").forEach(function (input) {
input.addEventListener("input", recalcLignes);
});

recalcLignes();
});
	</script>
{% endblock %}

